name: Production deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:

jobs:
  # create-release:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     packages: write
  #     pull-requests: write
  #     issues: write
  #   steps:
  #     - uses: actions/checkout@v4.1.1

  #     - name: Get package info
  #       id: package
  #       uses: kylejrp/action-nodejs-package-info@v1.2

  #     - name: Check Release Existence
  #       id: release-existence
  #       uses: insightsengineering/release-existence-action@v1.0.0
  #       with:
  #         release-tag: ${{ steps.package.outputs.version }}

  #     - name: Create Release
  #       if: steps.release-existence.outputs.release-exists == 'false'
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ steps.package.outputs.version }}
  #         release_name: Release ${{ steps.package.outputs.version }}
  #         body: |
  #           ${{ github.event.head_commit.message }}
  #         draft: false
  #         prerelease: false

  setup_database:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: write
      packages: write
      pull-requests: write
      issues: write
    steps:
      - name: Deploy Database
        uses: dawidd6/action-ansible-playbook@v2
        env:
          ANSIBLE_HOST_KEY_CHECKING: false
        with:
          playbook: database.yml
          directory: ./.github/workflows/ansible
          key: ${{ secrets.SSH_KEY }}
          inventory: |
            [database]
            ${{ secrets.DB_HOST }} ansible_user=${{ secrets.USER }}
          options: |
            --extra-vars repository_id=${{ github.repository_id }}
            --extra-vars environnement_name=production
            --extra-vars backend_host=${{ secrets.HOST }}
            --extra-vars db_database=${{ secrets.DB_DATABASE }}
            --extra-vars github_token=${{ secrets.GITHUB_TOKEN }}

  # build:
  #   runs-on: ubuntu-latest
  #   needs: create-release
  #   environment: production
  #   permissions:
  #     contents: write
  #     packages: write
  #     pull-requests: write
  #     issues: write
  #   steps:
  #     - uses: actions/checkout@v4.1.1

  #     - name: Install dependencies
  #       uses: php-actions/composer@v6
  #       with:
  #         php_version: "7.4"
  #         version: 1
  #         args: --no-dev --no-interaction --prefer-dist --optimize-autoloader

  #     - name: Get package info
  #       id: package
  #       uses: kylejrp/action-nodejs-package-info@v1.2

  #     - name: Zip build folder
  #       run: zip -r back.zip ./*

  #     - name: Upload File
  #       uses: svenstaro/upload-release-action@v2
  #       with:
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
  #         file: ./back.zip
  #         tag: ${{ steps.package.outputs.version }}
  #         overwrite: true

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build, setup_database]
  #   environment: production
  #   permissions:
  #     contents: write
  #     packages: write
  #     pull-requests: write
  #     issues: write
  #   steps:
  #     - uses: actions/checkout@v4.1.1

  #     - name: Get package info
  #       id: package
  #       uses: kylejrp/action-nodejs-package-info@v1.2

  #     - name: Deploy Backend
  #       uses: dawidd6/action-ansible-playbook@v2
  #       env:
  #         ANSIBLE_HOST_KEY_CHECKING: false
  #       with:
  #         playbook: backend.yml
  #         directory: ./.github/workflows/ansible
  #         key: ${{ secrets.SSH_KEY }}
  #         inventory: |
  #           [backend]
  #           ${{ secrets.HOST }} ansible_user=${{ secrets.USER }}
  #         options: |
  #           --extra-vars download_url=https://github.com/tech-personnal-repos/val-backend/releases/download/${{ steps.package.outputs.version }}/back.zip
  #           --extra-vars host=${{ secrets.HOST }}
  #           --extra-vars app_path=${{ secrets.APP_PATH }}
  #           --extra-vars app_key=${{ secrets.APP_KEY }}
  #           --extra-vars db_host=${{ secrets.DB_HOST }}
  #           --extra-vars db_port=${{ secrets.DB_PORT }}
  #           --extra-vars db_database=${{ secrets.DB_DATABASE }}
  #           --extra-vars db_username=${{ secrets.DB_USERNAME }}
  #           --extra-vars db_password=${{ secrets.DB_PASSWORD }}
