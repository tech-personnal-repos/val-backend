name: Production deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
      issues: write
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Get package info
        id: package
        uses: kylejrp/action-nodejs-package-info@v1.2

      - name: Check Release Existence
        id: release-existence
        uses: insightsengineering/release-existence-action@v1.0.0
        with:
          release-tag: ${{ steps.package.outputs.version }}

      - name: Create Release
        if: steps.release-existence.outputs.release-exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package.outputs.version }}
          release_name: Release ${{ steps.package.outputs.version }}
          body: |
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

  generate_missing_env:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
      issues: write
    environment: production
    steps:
      - id: database_password
        uses: Ba4bes/Password-Generator@v0.1
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
        if: ${{ env.ENV_FILE }} == ''

      - name: add DB_PASSWORD to secrets
        uses: dacbd/gha-secrets@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "DB_PASSWORD"
          value: ${{ steps.database_password.outputs.password }}
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
        if: ${{ env.ENV_FILE }} == ''

      - name: Add .env file to repo
        run: echo "APP_NAME=Laravel\nAPP_ENV=local\nAPP_KEY=\nAPP_DEBUG=true\nAPP_URL=http://${{ secrets.HOST }}\nLOG_CHANNEL=stderr\nDB_CONNECTION=mysql\nDB_HOST=${{ secrets.DB_HOST }}\nDB_PORT=${{ secrets.DB_PORT }}\nDB_DATABASE=${{ secrets.DB_DATABASE }}\nDB_USERNAME=${{ secrets.DB_USERNAME }}\nDB_PASSWORD=${{ secrets.DB_PASSWORD }}\nBROADCAST_DRIVER=log\nCACHE_DRIVER=file\nQUEUE_CONNECTION=sync\nSESSION_DRIVER=file\nSESSION_LIFETIME=120\n" > .env
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
        if: ${{ env.ENV_FILE }} == ''

      - name: generate APP_KEY
        run: php artisan key:generate
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
        if: ${{ env.ENV_FILE }} == ''

      - name: add .env to secrets
        uses: dacbd/gha-secrets@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "ENV_FILE"
          value: |

        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
        if: ${{ env.ENV_FILE }} == ''

  build:
    runs-on: ubuntu-latest
    needs: [create-release, generate_missing_env]
    environment: production
    permissions:
      contents: write
      packages: write
      pull-requests: write
      issues: write
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          php_version: "7.4"
          version: 1
          args: --no-dev --no-interaction --prefer-dist --optimize-autoloader

      - name: Get package info
        id: package
        uses: kylejrp/action-nodejs-package-info@v1.2

      - name: Zip build folder
        run: zip -r back.zip ./*

      - name: Upload File
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./back.zip
          tag: ${{ steps.package.outputs.version }}
          overwrite: true

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    permissions:
      contents: write
      packages: write
      pull-requests: write
      issues: write
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Get package info
        id: package
        uses: kylejrp/action-nodejs-package-info@v1.2

      - name: Deploy with ansible
        uses: dawidd6/action-ansible-playbook@v2
        env:
          ANSIBLE_HOST_KEY_CHECKING: false
        with:
          playbook: playbook.yml
          directory: ./.github/workflows/ansible
          key: ${{ secrets.SSH_KEY }}
          inventory: |
            [backend]
            ${{ secrets.HOST }} ansible_user=${{ secrets.USER }}
          options: |
            --extra-vars db_host=${{ secrets.DB_HOST }}
            --extra-vars host=${{ secrets.HOST }}
            --extra-vars download_url=https://github.com/tech-personnal-repos/val-backend/releases/download/${{ steps.package.outputs.version }}/back.zip
            --extra-vars app_path=${{ secrets.APP_PATH }}
            --extra-vars env_file=${{ secrets.ENV_FILE }}
