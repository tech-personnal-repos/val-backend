- name: Setup Database
  hosts: database

  tasks:
    - name: Update apt cache
      apt: update_cache=yes

    - name: Check if mariadb is installed
      stat: path=/usr/sbin/mysqld
      register: mariadb_installed

    - name: Exit if mariadb is installed
      meta: end_host
      when: mariadb_installed.stat.exists

    - name: Install Mariadb server
      apt: name=mariadb-server state=present

    - name: Install github client
      apt: name=gh state=present

    - name: Generate db username
      shell: "openssl rand -base64 30"
      register: db_username

    - name: Generate db password
      shell: "openssl rand -base64 30"
      register: db_password

    - name: Generate db name if not given
      shell: "openssl rand -base64 10"
      register: db_name

    - name: create token file
      copy:
        content: "{{ github_token }}"
        dest: /tmp/github_token

    - name: Login to github cli
      shell: "gh auth login --with-token < /tmp/github_token"

    - name: Add database var to github secrets
      shell: "gh secret set {{ item.name }} -b {{ item.value }} -R tech-personnal-repos/val-backend -e production"
      loop:
        - { name: DB_PASSWORD, value: "{{ db_password.stdout }}" }
        - { name: DB_USERNAME, value: "{{ db_username.stdout }}" }
        - {
            name: DB_DATABASE,
            value: "{{ (db_database == '') | ternary(db_name.stdout, db_database) }}",
          }
      no_log: true

    - name: List secrets
      shell: "gh secret list -R tech-personnal-repos/val-backend -e production"
      register: secrets

    - name: Debug secrets
      debug:
        var: secrets.stdout

    - name: remove token file
      file:
        path: /tmp/github_token
        state: absent

    - name: Enable mariadb service
      service: name=mariadb enabled=yes state=started

    - name: Install python3 mysql connector
      apt: name=python3-mysqldb state=present

    - name: Set bind-address in my.cnf
      lineinfile:
        path: /etc/mysql/mariadb.conf.d/50-server.cnf
        regexp: '^bind-address\s*='
        line: "bind-address = 0.0.0.0"
        state: present
      register: bind_address

    - name: Restart mysql service
      service:
        name: mysql
        state: restarted
      when: bind_address.changed

    - name: Create database user
      mysql_user:
        name: "{{ db_username.stdout }}"
        password: "{{ db_password.stdout }}"
        priv: "*.*:ALL,GRANT"
        host: "{{ backend_host }}"
        state: present

    - name: Create database
      mysql_db:
        name: "{{ (db_database == '') | ternary(db_name.stdout, db_database) }}"
        state: present
